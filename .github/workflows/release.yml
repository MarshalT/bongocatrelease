name: Create Release

on:
  push:
    # 当推送标签时触发工作流
    tags:
      - 'v*' # 匹配所有以v开头的标签，如v1.0.0

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 获取完整历史以便生成完整的Release Notes
      
      - name: Get tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Generate Release Notes
        id: generate_notes
        run: |
          # 获取上一个标签（如果存在）
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ steps.get_tag.outputs.TAG_NAME }}^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            # 如果没有上一个标签，获取所有提交
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # 获取从上一个标签到当前标签的提交
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" $PREV_TAG..${{ steps.get_tag.outputs.TAG_NAME }} >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
          body: |
            ## BongoCat ${{ steps.get_tag.outputs.TAG_NAME }}
            
            ### 更新日志
            ${{ steps.generate_notes.outputs.RELEASE_NOTES }}
            
            ### 下载
            请下载附件中的安装程序。
          draft: false
          prerelease: false
          files: |
            BongoCat_*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 